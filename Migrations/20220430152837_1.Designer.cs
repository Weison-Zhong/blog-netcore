// <auto-generated />
using System;
using Blog2022_netcore.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Blog2022_netcore.Migrations
{
    [DbContext(typeof(RoutineDbContext))]
    [Migration("20220430152837_1")]
    partial class _1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Blog2022_netcore.Entities.Administrator", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Avatar")
                        .HasColumnType("longtext");

                    b.Property<string>("CreatedDate")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("char(36)");

                    b.Property<string>("UpdatedDate")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Administrators");
                });

            modelBuilder.Entity("Blog2022_netcore.Entities.Api", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedDate")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UpdatedDate")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.ToTable("Api");
                });

            modelBuilder.Entity("Blog2022_netcore.Entities.Article", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ArticleType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CoverImgUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("CreatedDate")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ReadCount")
                        .HasColumnType("int");

                    b.Property<string>("RelatedLink")
                        .HasColumnType("longtext");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UpdatedDate")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Article");
                });

            modelBuilder.Entity("Blog2022_netcore.Entities.BlogConfig", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("FirstText")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("IconLink")
                        .HasColumnType("longtext");

                    b.Property<string>("ResumeUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("SecondText")
                        .HasColumnType("longtext");

                    b.Property<string>("ThirdText")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("BlogConfig");
                });

            modelBuilder.Entity("Blog2022_netcore.Entities.ChildMenu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ComponentPath")
                        .HasColumnType("longtext");

                    b.Property<string>("CreatedDate")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("IconId")
                        .HasColumnType("char(36)");

                    b.Property<byte>("KeepAlive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("ParentMenuId")
                        .HasColumnType("char(36)");

                    b.Property<string>("UpdatedDate")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IconId");

                    b.HasIndex("ParentMenuId");

                    b.ToTable("ChildMenu");
                });

            modelBuilder.Entity("Blog2022_netcore.Entities.Demo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CoverImgUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("CreatedDate")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RelatedLink")
                        .HasColumnType("longtext");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UpdatedDate")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Demo");
                });

            modelBuilder.Entity("Blog2022_netcore.Entities.DemoIcon", b =>
                {
                    b.Property<Guid>("DemoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("IconId")
                        .HasColumnType("char(36)");

                    b.HasKey("DemoId", "IconId");

                    b.HasIndex("IconId");

                    b.ToTable("DemoIcon");
                });

            modelBuilder.Entity("Blog2022_netcore.Entities.Guest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("AccessCount")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("longtext");

                    b.Property<string>("Country")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Ip")
                        .HasColumnType("longtext");

                    b.Property<string>("Latitude")
                        .HasColumnType("longtext");

                    b.Property<string>("Longitude")
                        .HasColumnType("longtext");

                    b.Property<string>("Province")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Guest");
                });

            modelBuilder.Entity("Blog2022_netcore.Entities.Icon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedDate")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Icon");
                });

            modelBuilder.Entity("Blog2022_netcore.Entities.ParentMenu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedDate")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("IconId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UpdatedDate")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IconId");

                    b.ToTable("ParentMenu");
                });

            modelBuilder.Entity("Blog2022_netcore.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedDate")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UpdatedDate")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Blog2022_netcore.Entities.RoleApi", b =>
                {
                    b.Property<Guid>("RoleId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ApiId")
                        .HasColumnType("char(36)");

                    b.HasKey("RoleId", "ApiId");

                    b.HasIndex("ApiId");

                    b.ToTable("RoleApi");
                });

            modelBuilder.Entity("Blog2022_netcore.Entities.Administrator", b =>
                {
                    b.HasOne("Blog2022_netcore.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Blog2022_netcore.Entities.Api", b =>
                {
                    b.HasOne("Blog2022_netcore.Entities.ChildMenu", "Menu")
                        .WithMany("Apis")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("Blog2022_netcore.Entities.ChildMenu", b =>
                {
                    b.HasOne("Blog2022_netcore.Entities.Icon", "Icon")
                        .WithMany("ChildMenus")
                        .HasForeignKey("IconId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Blog2022_netcore.Entities.ParentMenu", "ParentMenu")
                        .WithMany("Children")
                        .HasForeignKey("ParentMenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Icon");

                    b.Navigation("ParentMenu");
                });

            modelBuilder.Entity("Blog2022_netcore.Entities.DemoIcon", b =>
                {
                    b.HasOne("Blog2022_netcore.Entities.Demo", "Demo")
                        .WithMany("Icons")
                        .HasForeignKey("DemoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Blog2022_netcore.Entities.Icon", "Icon")
                        .WithMany("Demos")
                        .HasForeignKey("IconId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Demo");

                    b.Navigation("Icon");
                });

            modelBuilder.Entity("Blog2022_netcore.Entities.ParentMenu", b =>
                {
                    b.HasOne("Blog2022_netcore.Entities.Icon", "Icon")
                        .WithMany("ParentMenus")
                        .HasForeignKey("IconId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Icon");
                });

            modelBuilder.Entity("Blog2022_netcore.Entities.RoleApi", b =>
                {
                    b.HasOne("Blog2022_netcore.Entities.Api", "Api")
                        .WithMany("Roles")
                        .HasForeignKey("ApiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Blog2022_netcore.Entities.Role", "Role")
                        .WithMany("Apis")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Api");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Blog2022_netcore.Entities.Api", b =>
                {
                    b.Navigation("Roles");
                });

            modelBuilder.Entity("Blog2022_netcore.Entities.ChildMenu", b =>
                {
                    b.Navigation("Apis");
                });

            modelBuilder.Entity("Blog2022_netcore.Entities.Demo", b =>
                {
                    b.Navigation("Icons");
                });

            modelBuilder.Entity("Blog2022_netcore.Entities.Icon", b =>
                {
                    b.Navigation("ChildMenus");

                    b.Navigation("Demos");

                    b.Navigation("ParentMenus");
                });

            modelBuilder.Entity("Blog2022_netcore.Entities.ParentMenu", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("Blog2022_netcore.Entities.Role", b =>
                {
                    b.Navigation("Apis");
                });
#pragma warning restore 612, 618
        }
    }
}
